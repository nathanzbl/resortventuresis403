<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Resort Property Ventures Login</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        /* Custom styles and configuration */
        :root {
            /* Color Variables from the new scheme */
            --color-light-bg: #EAE3D3; /* Light background for body/form elements */
            --color-dark-bg: #985E47;  /* Dark background for primary accent/headings */
            --color-heading: #985E47;  /* Heading color (same as dark-bg) */
            --color-button: #738F73;   /* Button and interactive element color */
            --color-text-light: white; /* Text color for dark backgrounds */
            --font-primary: 'Georgia', serif;
        }

        body {
            font-family: var(--font-primary);
            /* Body background uses the light background color */
            background-color: var(--color-light-bg); 
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 1rem;
        }
        /* Custom Tailwind-like classes based on new variables */
        .text-rpv-heading { color: var(--color-heading); }
        .bg-rpv-button { background-color: var(--color-button); }
        .text-rpv-button { color: var(--color-button); }
        .hover\:bg-rpv-dark:hover { background-color: var(--color-dark-bg); }
        .focus\:ring-rpv-button:focus { 
            --tw-ring-color: var(--color-button);
        }
        .border-rpv-button { border-color: var(--color-button); }

        /* Custom message box styling (replaces alert/confirm) */
        .message-box {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1000;
            padding: 1.5rem;
            border-radius: 0.75rem;
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            max-width: 90%;
            min-width: 300px;
        }
    </style>
</head>
<body>

    <div id="login-card" class="w-full max-w-md bg-white p-8 md:p-10 rounded-xl shadow-2xl border-2 border-gray-100 transition duration-300 hover:shadow-3xl">

        <div class="text-center mb-8">
            <svg class="mx-auto h-12 w-auto text-rpv-heading" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5M9 21h6" />
            </svg>
            <h2 class="mt-4 text-3xl font-extrabold text-gray-900">
                Sign in to RPV
            </h2>
            <p class="mt-2 text-sm text-rpv-heading">
                Resort Property Ventures
            </p>
        </div>

        <form class="space-y-6" id="loginForm" onsubmit="handleLogin(event)">
            <div>
                <label for="username" class="block text-sm font-medium text-gray-700">Username or Email</label>
                <div class="mt-1">
                    <input id="username" name="username" type="text" required class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-rpv-button focus:border-rpv-button sm:text-sm">
                </div>
            </div>

            <div>
                <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
                <div class="mt-1">
                    <input id="password" name="password" type="password" required class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-rpv-button focus:border-rpv-button sm:text-sm">
                </div>
            </div>

            <div class="flex items-center justify-between">
                <div class="text-sm">
                    <a href="#" class="font-medium text-rpv-button hover:text-rpv-heading" onclick="showMessage('Forgot Password functionality is not yet implemented.')">
                        Forgot your password?
                    </a>
                </div>
            </div>

            <div>
                <button type="submit" class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-rpv-button hover:bg-rpv-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rpv-button transition duration-150 ease-in-out">
                    Log in
                </button>
            </div>
        </form>

        <div class="mt-6">
            <div class="relative">
                <div class="absolute inset-0 flex items-center" aria-hidden="true">
                    <div class="w-full border-t border-gray-300"></div>
                </div>
                <div class="relative flex justify-center text-sm">
                    <span class="px-2 bg-white text-gray-500">
                        New User? Register here
                    </span>
                </div>
            </div>

            <div class="mt-4 grid grid-cols-2 gap-3">
                <button type="button" class="w-full flex justify-center items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 transition duration-150 ease-in-out" onclick="showMessage('Owner Registration link clicked. This will navigate to /register/owner.')">
                    Owner Registration
                </button>
                <button type="button" class="w-full flex justify-center items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 transition duration-150 ease-in-out" onclick="showMessage('Manager Registration link clicked. This will navigate to /register/manager.')">
                    Manager Registration
                </button>
            </div>
        </div>

    </div>

    <div id="messageBox" class="hidden message-box bg-rpv-button text-white border-2 border-rpv-heading" role="alert">
        <p id="messageText" class="text-sm font-medium"></p>
        <button onclick="hideMessage()" class="mt-2 text-xs font-semibold px-3 py-1 bg-rpv-heading text-white rounded hover:opacity-90">Close</button>
    </div>

    <script>
        /**
         * Custom function to display messages instead of using alert().
         * @param {string} message - The message to display.
         */
        function showMessage(message) {
            const box = document.getElementById('messageBox');
            const text = document.getElementById('messageText');
            text.textContent = message;
            box.classList.remove('hidden');
        }

        /**
         * Hides the custom message box.
         */
        function hideMessage() {
            document.getElementById('messageBox').classList.add('hidden');
        }

        /**
         * Handles the login form submission.
         * In a real application, this would send an AJAX request to your server.
         * @param {Event} event - The form submission event.
         */
        async function handleLogin(event) {
            event.preventDefault();

            const form = document.getElementById('loginForm');
            const formData = new FormData(form);

            try {
                const response = await fetch('/login', {
                    method: 'POST',
                    body: new URLSearchParams(formData),
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded'
                    }
                });

                const result = await response.json();

                if (response.ok) {
                    // SUCCESS: Use the redirectTo value sent by the server (now '/')
                    showMessage(`Login successful! Redirecting...`);
                    // Wait a moment for the user to read the message, then redirect
                    setTimeout(() => {
                        window.location.href = result.redirectTo; 
                    }, 500); 
                } else {
                    // FAILURE: Display the error message from the server
                    showMessage(`Login failed: ${result.message}`);
                }
            } catch (error) {
                console.error('Login request failed:', error);
                showMessage('An unexpected error occurred during login.');
            }
        }

        // Add a focus state to the card for better visual feedback
        document.getElementById('login-card').addEventListener('mouseenter', function() {
            this.classList.add('shadow-3xl');
        });
        document.getElementById('login-card').addEventListener('mouseleave', function() {
            this.classList.remove('shadow-3xl');
        });

    </script>
</body>
</html>